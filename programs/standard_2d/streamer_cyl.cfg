 ##############################################
 ###          Configuration file            ###
 ##############################################
 cylindrical = T

 # The desired endtime in seconds of the simulation:
 end_time = 8e-9

 # The name of the simulation:
 output%name = output/streamer_cyl_v2chem

 # The length of the (square) domain:
 domain_len = 16e-3 16e-3

 # Whether the domain is periodic (per dimension):
 periodic = F F

 # The gas pressure in bar (used for photoionization):
 gas%pressure = 0.1000E+01

[gas]
    # Gas component names:
    components = 'N2' 'O2'

    # Whether the gas dynamics are simulated:
    dynamics = F

    # Gas component fractions:
    fractions =  9.8000E-01  0.200E-01

    # Joule heating efficiency (between 0.0 and 1.0):
    heating_efficiency =  1.0000E+00

    # Gas mean molecular weight (kg), for gas dynamics:
    molecular_weight =  4.7824E-26

    # The gas temperature (Kelvin):
    temperature =  3.0000E+02
 # The applied electric field:
 field_amplitude = -.2000E+07

 # The background ion and electron density in 1/m^3:
 background_density = 0.1000E+13

 # Initial density of the seed:
 seed_density = 0.5000E+19

 # Type of seed: neutral (0), ions (1) or electrons (-1)
 seed_charge_type = 1

 # The relative start position of the initial seed:
 seed_rel_r0 = 0.0000E+00 0.52E+00

 # The relative end position of the initial seed:
 seed_rel_r1 = 0.0000E+00 0.48E+00

 # Seed width:
 seed_width = 2.000E-04

 # Fallof type for seed, see m_geom.f90:
 seed_falloff = smoothstep

 # The timestep for writing output:
 output%dt = 0.2500E-09

 # The maximum timestep:
 dt_max = 0.1000E-09

 [photoi]
        # Whether photoionization is enabled:
    enabled = T
    # Whether photoionization is enabled in gas:
    enabled_ingas = T

    # Photoionization efficiency factor, typically around 0.05-0.1:
    eta =  5.0000E-02

    # Which excited species to use when photoi%source_type = from_species:
    excited_species = 'UNDEFINED'

    # Which photoionization method to use (helmholtz, montecarlo):
    method = 'helmholtz'

    # Update photoionization every N time step:
    per_steps = 5

    # Photoemission time delay in case photoi_source_type is 'from_species':
    photoemission_time =  0.0000E+00

    # Photoionization quenching pressure (bar):
    quenching_pressure =  4.0000E-02

    # How to compute the photoi. source (Zheleznyak, from_species):
    source_type = 'Zheleznyak'

[photoi_helmh]
    # Can be Luque (default), Bourdon-2, Bourdon-3 or custom:
    author = 'custom'

    # 20 % O2
    # Weights corresponding to the lambdas; unit 1/(m bar)^2:
    #coeffs = 1.33e8 1.28e7 7.92e5

    # Lambdas to use in Helmholtz eq; unit 1/(m bar):
    #lambdas = 2.22e4 6.67e3 1.78e3
    
    # 2 % O2
    # Weights corresponding to the lambdas; unit 1/(m bar)^2:
    coeffs = 1.33e7 3.39e5 3.39e6

    # Lambdas to use in Helmholtz eq; unit 1/(m bar):
    lambdas = 1.34e4 9.12e2 3.64e3

    # 10% O2
    # Weights corresponding to the lambdas; unit 1/(m bar)^2:
    #coeffs =  9.09e6 7.34e7 5.73e5

    # Lambdas to use in Helmholtz eq; unit 1/(m bar):
    #lambdas = 5.48e3 1.79e4 1.34e3

    # 0.2% O2
    # Weights corresponding to the lambdas; unit 1/(m bar)^2:
    #coeffs = 1.23e6 2.86e6 7.2e4

    # Lambdas to use in Helmholtz eq; unit 1/(m bar):
    #lambdas = 1.16e4 2.75e3 5.21e2

    # Maximum residual relative to max(|rhs|):
    max_rel_residual =  1.0000E-02


 # Input file with transport data:
 input_data%file = ../../transport_data/air_chemistry_v2.txt
 input_data%old_style = F
