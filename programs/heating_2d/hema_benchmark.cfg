 # # Initial density of the seed:
 # seed_density = 1e14

 # # Type of seed: neutral (0), ions (1) or electrons (-1)
 # seed_charge_type = 0

 # # The relative start position of the initial seed:
 # seed_rel_r0 = 0. 0.89

 # # The relative end position of the initial seed:
 # seed_rel_r1 = 0. 0.88

 # # Seed width:
 # seed_width = 4.000E-05

 # # Fallof type for seed, see m_geom.f90:
 # seed_falloff = gaussian

 # gradient_type = sphere
 # shock_width = 0.05
 # density_ratio = 0.5
 # sphere_center = 0.0 0.5
 # sphere_radius = 0.1
 # density_ratio_inside_sphere = T

#restart_from_file = 'evenMoreResults/case_1bar_1_000020.dat'
# The background ion and electron density (1/m3):
#background_density =  1.0000E+11
background_density =  1.7700E+09

# The number of grid cells per coordinate in a box:
box_size = 8

# Whether cylindrical coordinates are used (only in 2D):
cylindrical = T

[datfile]
    # Write binary output files every N outputs:
    per_outputs = 10

    # Write binary output files (to resume later):
    write = T

# Only derefine if grid spacing if smaller than this value:
#derefine_dx =  1.0000E-04
derefine_dx =  5.0000E-05

# Ensure grid spacing around electrode is less than this value:
refine_electrode_dx =  0.5000E-05
electrode_derefine_factor = 8

# The length of the domain (m):
#domain_len =  1.0000E-01  1.0000E-01
domain_len = 13.3e-3 13.3e-3

# Small density for the chemistry time step:
dt_chemistry_nmin =  1.0000E+15

# The maximum timestep (s):
dt_max =  1

# The minimum timestep (s):
dt_min =  1.0000E-15

# Safety factor for the time step:
dt_safety_factor =  9.0000E-01

# Streamer length at which the simulation will end.:
end_streamer_length =  1.5000E-02

# Type of boundary condition to use (homogeneous, ...):
field_bc_type = 'homogeneous'

# Whether the electrode is grounded or at the applied voltage:
field_electrode_grounded = F

# Type of electrode:
field_electrode_type = 'rod'

# How the electric field or voltage is specified:
field_given_by = 'voltage 2.7e4'

# Number of voltage pulses (default: 1):
field_num_pulses = 20

# The desired endtime (s) of the simulation:
end_time = 1200240e-9
# Time of one complete voltage pulse (s):
field_pulse_period = 100e-6
# Pulse width excluding rise and fall time (s):
field_pulse_width =  10.000E-09
# Linear rise time of field (s):
field_rise_time =  0.1000E-08
field_fall_time =  0.1000E-08

# First electrode relative position:
field_rod_r0 =  0.0000E+00  0.94

# Second electrode relative position:
field_rod_r1 =  0.0000E+00  1.0000E+00

# Third electrode relative position:
field_rod_r2 =  0.0000E+00  1.0000E+00

# Electrode radius (in m, for standard rod electrode):
#field_rod_radius =  7.5000E-04
field_rod_radius = 1.5e-4

# Electrode tip radius (for conical electrode):
#field_tip_radius =  5.0000E-05
field_tip_radius =  6.6500E-06

[fixes]
    # Enable flux limiting, but prevent field from exceeding this value:
    # drt_max_field = 1e6 

    # Use source factor to prevent unphysical effects due to diffusion:
    source_factor = 'none'

    # Minimal density for including electron sources:
    source_min_density = -1.0000E+10

    # Whether to write the source factor to the output:
    write_source_factor = F

[gas]
    # Gas component names:
    components = 'N2' 'O2'

    # Whether the gas dynamics are simulated:
    dynamics = T
<<<<<<< HEAD
    heating_efficiency =  0.3
=======
    fast_heating_efficiency =  1.0
>>>>>>> new_flux

    # Gas component fractions:
    fractions =  8.0000E-01  2.0000E-01

    # Gas mean molecular weight (kg), for gas dynamics:
    molecular_weight =  4.7824E-26

    # The gas pressure (bar):
    pressure =  1.0

# Number of simulation steps to wait before initializing "the starting position of the streamer:
initial_streamer_pos_steps_wait = 5

[input_data]
    # Input file with transport (and reaction) data:
    # file = '../../transport_data/N2_O2/air_chemistry_Baohong_reactions.txt'
    file = '../../transport_data/air_chemistry_v3.txt'

    # List of ion mobilities (m^2/Vs) at 1 bar, 300 K:
     ion_mobilities =  2.2000E-04  2.2000E-04  2.2000E-04  2.2000E-04  2.2000E-04  2.2000E-04  2.2000E-04

    # List of ions that are considered mobile:
     mobile_ions = 'N2_plus' 'O2_plus' 'N4_plus' 'O4_plus' 'O2_min' 'O_min' 'O3_min'

    # Use old style transport data (alpha, eta, mu, D vs V/m):
    old_style = F
    
[table_data]
    # Input interpolation method (linear, cubic_spline):
    #input_interpolation = 'linear'
    input_interpolation = 'linear'

    # Maximal field (in Td) for the rate coeff. lookup table:
    max_townsend =  1.0000E+03

    # Minimal field (in Td) for the rate coeff. lookup table:
    min_townsend =  1.0000E+00

    # Size of the lookup table for reaction rates:
    size = 1000

    # x-spacing for lookup table (linear, quadratic):
    #xspacing = 'linear'
    xspacing = 'quadratic'

# Memory limit (GB):
memory_limit_GB =  8.0000E+00

[output]
    # Output the conductivity of the plasma:
    conductivity = T

    # The timestep for writing output (s):
    dt =  5.0000E-10

    # To reduce output when the voltage is off:
    dt_factor_pulse_off = 100

    # Show the electron energy in eV from the local field approximation:
    electron_energy = F

    # Name for the output files (e.g. output/my_sim):
    name = 'output/hema_benchmark_v4'

    # Print status every this many seconds:
    status_delay =  1.0000E+01

# Whether the domain is periodic (per dimension):
periodic = F F

[photoi]
    # Whether photoionization is enabled:
    enabled = T

    # Whether photoionization is enabled in gas:
    enabled_ingas = T

    # Photoionization efficiency factor, typically around 0.05-0.1:
    eta =  5.0000E-02

    # Which photoionization method to use (helmholtz, montecarlo):
    method = 'helmholtz'

    # Update photoionization every N time step:
    per_steps = 4

    # How to compute the photoi. source (Zheleznyak, from_species):
    source_type = 'Zheleznyak'

[photoi_helmh]
    # Can be Luque (default), Bourdon-2, Bourdon-3 or custom:
    author = 'Bourdon-3'

    # Maximum residual relative to max(|rhs|):
    max_rel_residual =  1.0000E-02

# Density prolongation method (limit, linear, linear_cons, sparse):
prolong_density = 'limit'

# Refine if alpha*dx is larger than this value:
refine_adx =  1.0000E+00

# For refinement, use alpha(f * E)/f, where f is this factor:
refine_adx_fac =  1.0000E+00

# The refinement buffer width in cells (around flagged cells):
refine_buffer_width = 4

# Refine if the curvature in phi is larger than this value:
refine_cphi =  1.0000E+99


# Refine until dx is smaller than this factor times the seed width:
refine_init_fac =  2.5000E-01

# Refine around initial conditions up to this time:
refine_init_time =  1.0000E-08

# Refine regions at most up to this grid spacing:
refine_limits_dr =  1.0000E+99

# Maximum coordinate of the refinement limits:
refine_limits_rmax =  0.0000E+00  0.0000E+00

# Minimum coordinate of the refinement limits:
refine_limits_rmin =  0.0000E+00  0.0000E+00

# The grid spacing will always be smaller than this value:
refine_max_dx =  4.0000E-03

# Minimum electron density for adding grid refinement:
refine_min_dens = -1.0000E+99

# The grid spacing will always be larger than this value:
refine_min_dx =  1.0000E-07

# The number of steps after which the mesh is updated:
refine_per_steps = 2

# Refine regions up to this grid spacing:
refine_regions_dr =  1.0000E+99

# Maximum coordinate of the refinement regions:
refine_regions_rmax =  0.0000E+00  0.0000E+00

# Minimum coordinate of the refinement regions:
refine_regions_rmin =  0.0000E+00  0.0000E+00

# Refine regions up to this simulation time:
refine_regions_tstop =  1.0000E+99


# Seed for random numbers; if all zero, generate randomly:
rng_seed = 8123 91234 12399 293434

[silo]
    # Write silo output files every N outputs:
    per_outputs = 1

# Write silo output:
silo_write = T

# Boundary condition for the plasma species:
species_boundary_condition = 'neumann_zero'


# Time integrator (use arbitrary value to see options):
time_integrator = 'heuns_method'

# Whether to include an electrode:
use_electrode = T
