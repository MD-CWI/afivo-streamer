###############################################
############       Configuration file        ###############
###############################################

# Whether cylindrical coordinates are used (only in 2D):
cylindrical = T

# Whether the domain is periodic (per dimension):
periodic = F F

# The number of grid cells per coordinate in a box:
box_size = 8

# The size of the coarse grid:
coarse_grid_size = 32 32

# Add electrode with the following settings
use_electrode = T

# Ensure grid spacing around electrode is less than this value:
refine_electrode_dx =  2.0000E-05

# Whether the electrode is grounded or at the applied voltage:
field_electrode_grounded = F

# Electrode relative start position (for standard rod electrode):
field_rod_r1 =  0.0000E+00  1.0000E+00

# Electrode relative end position (for standard rod electrode):
field_rod_r0 =  0.0000E+00  0.9100E+00

# Electrode radius (in m, for standard rod electrode):
field_rod_radius =  0.4000E-03

# Directory where the output should be written:
output%name = /export/scratch2/baohong/chemistry/d40mm_double_pulses/

# The length of the domain (m):
domain_len =  4.0000E-02  4.0000E-02

# Streamer length at which the simulation will end (m) :
end_streamer_length =  3.5000E-02

# The desired endtime (s) of the simulation:
end_time =  5.0000E-07

# Whether the length of the streamer is used to end the simulation:
use_end_streamer_length = T

# The timestep for writing output (s):
output%dt =  5.0000E-10

# The maximum timestep (s):
dt_max =  1.0000E-10

# The minimum timestep (s):
dt_min =  1.0000E-16

[gas]
    # Gas components:
    components= N2 O2

    # Fraction of O2, used for photoionization:
    fractions= 0.8 0.2

    # The gas pressure (bar), used for photoionization:
    pressure = 1.0000E+00

# The background ion and electron density (1/m3):
background_density = 1.0000E+11

# The applied electric field (V/m) (vertical):
field_given_by= field -1.4000E+06

# Linear rise time of field (s):
field_rise_time = 1.0000E-09

# Type of seed: neutral (0), ions (1) or electrons (-1):
#seed_charge_type = 0

# Initial density of the seed (1/m3):
#seed_density =  1.0000E+15

# The relative start position of the initial seed:
#seed_rel_r0 =  0.0000E+00 0.9000E+00

# The relative end position of the initial seed:
#seed_rel_r1 =  0.0000E+00 0.9000E+00

# Seed width (m):
#seed_width =  0.4000E-03

# Fall-off type for seed (sigmoid, gaussian, smoothstep, step, laser), "default=smoothstep:
#seed_falloff = 'gaussian'

# Type for boundary condition to use (homogeneous, ...):
field_bc_type = 'homogeneous'

# Boundary condition for the plasma species (neumann_zero, dirichlet_zero), "default=neumann_zero:
species_boundary_condition = 'neumann_zero'

# Whether to compute the deposited power density:
compute_power_density = T

# Write derivatives of these species to output:
#output%write_derivatives = 'e N2_star_J O2_star_J N2_star_v1 N2_star_v2 N2_star_v3 N2_star_v4 N2_star_v5 N2_star_v6 N2_star_v7 N2_star_v8 O2_star_v1 O2_star_v2 O2_star_v3 O2_star_v4 N2_star_A1 N2_star_A2 N2_star_B N2_star_a N2_star_C N2_star_E O2_star_a O2_star_b O2_star_A N__hat4S N__hat2D N__hat2P O__hat3P O__hat1D O__hat1S N2_plus O2_plus N4_plus O4_plus N2O2_plus O_min O2_min O3_min O4_min O3 NO NO2 N2O NO3'

[field_waveform]
    # Whether pulse field versus time is enabled:
    enabled = T

    # Linear rise time of field (s):
    rise_time = 1.0000E-09

    # Linear fall time of field (s):
    fall_time = 0.5000E-09

    # Pulse field (V/m):
    pulse_field = -1.4000E+06

    # Z coordinate at which turn off the voltage:
    turn_off_z = 18.0000E-03

    # Detection density (1/m3):
    detection_density = 1.0000E+16
 
[input_data]
    # List of ion mobilities (m^2/Vs):
    ion_mobilities = '2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4 2.2e-4'

    # List of ions that are considered mobile:
    mobile_ions = 'N_plus N2_plus N3_plus N4_plus O_plus O2_plus O4_plus NO_plus NO2_plus N2O_plus N2O2_plus O_min O2_min O3_min O4_min NO_min NO2_min N2O_min NO3_min'
   
[photoi]
    # Whether photoionization is enabled:
    enabled = T
    
    # Which photoionization method to use (helmholtz, montecarlo):
    method = 'helmholtz'
   
    # Photoionization efficiency factor, typically around 5.0000E-02:
    eta =  7.5000E-02

    # Update photoionization every N time step:
    per_steps = 1
    
    # Photoionization quenching pressure (bar):
    quenching_pressure = 4.0000E-02
      
    # How to compute the photoi. source (Zheleznyak, from_species):
    source_type = 'Zheleznyak'

[photoi_helmh]
    # Can be Luque (default), Bourdon-2, Bourdon-3 or custom:
    author = 'Bourdon-3'

[cross]
    # Use this many points for cross-section data:
    npoints = 5000

    # Integrate up to this r value:
    rmax =  10.0000E-03

    # Write integral over cross-section data output:
    write = F

[lineout]
    # Write output along a line:
    write = F

[plane]
    # Use this many pixels for plane data:
    #npixels = 500 800

    # Relative position of plane maximum coordinate:
    #rmax =  0.2500E+00  1.0000E+00

    # Relative position of plane minimum coordinate:
    #rmin =  0.0000E+00  0.0000E+00

    # Names of variable to write in a plane:
    #varname = 'electric_fld e N2_star_C'

    # Write uniform output in a plane:
    #write = F

# Only derefine if grid spacing if smaller than this value:
derefine_dx =  1.0000E-05

# Refine if alpha*dx is larger than this value:
refine_adx =  0.8000E+00

# For refinement, use alpha(f * E)/f, where f is this factor:
refine_adx_fac =  1.2500E+00

# The grid spacing will always be smaller than this value:
refine_max_dx =  1.0000E-03

# The grid spacing will always be larger than this value:
refine_min_dx =  1.0000E-06	

# Input file with transport (and reaction) data:
input_data%file = ../../transport_data/N2_O2/air_chemistry_Baohong_reactions_1000points.txt

# Use old style transport data (alpha, eta, mu, D vs V/m):
input_data%old_style= F

[table_data]
    # Input interpolation method (linear, cubic_spline):
    input_interpolation = 'linear'

    # Maximal field (in Td) for the rate coeff. lookup table:
    max_townsend =  1.0000E+03

    # Minimal field (in Td) for the rate coeff. lookup table:
    min_townsend =  0.0000E+00

    # Size of the lookup table for reaction rates:
    size = 1000

    # x-spacing for lookup table (linear, quadratic):
    xspacing = 'quadratic'
